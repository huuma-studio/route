{
  "name": "@huuma/route",
  "version": "0.0.4",
  "imports": {
    "@std/assert": "jsr:@std/assert@^1.0.13",
    "@std/path": "jsr:@std/path@^1.1.1"
  },
  "exports": {
    ".": "./src/mod.ts",
    "./protocol": "./src/protocol.ts",
    "./http/exception/bad-request-exception": "./src/http/exceptions/bad-request-exception.ts",
    "./http/exception/entity-too-large-exception": "./src/http/exceptions/entity-too-large-exception.ts",
    "./http/exception/handle-exception": "./src/http/exceptions/handle-exception.ts",
    "./http/exception/http-exception": "./src/http/exceptions/http-exception.ts",
    "./http/exception/internal-server-exception": "./src/http/exceptions/internal-server-exception.ts",
    "./http/exception/not-found-exception": "./src/http/exceptions/not-found-exception.ts",
    "./http/exception/unauthorized-exception": "./src/http/exceptions/unauthorized-exception.ts",
    "./http/exception/unsupported-media-type-exception": "./src/http/exceptions/unsupported-media-type-exception.ts",
    "./http/http-method": "./src/http/http-method.ts",
    "./http/http-status": "./src/http/http-status.ts",
    "./http/protocol": "./src/http/protocol.ts",
    "./http/request": "./src/http/request.ts",
    "./http/route": "./src/http/route.ts",
    "./http/router": "./src/http/router.ts",
    "./http/tasks/assets": "./src/http/tasks/assets.ts",
    "./http/tasks/favicon": "./src/http/tasks/favicon.ts",
    "./middleware": "./src/middleware/middleware.ts",
    "./middleware/add-raw-body-to-context": "./src/middleware/add-raw-body-to-context.ts",
    "./middleware/add-search-params-to-context": "./src/middleware/add-search-params-to-context.ts",
    "./middleware/cors": "./src/middleware/cors.ts",
    "./middleware/log-time-to-response": "./src/middleware/log-time-to-response.ts",
    "./middleware/redirect-to-without-slash": "./src/middleware/redirect-to-without-slash.ts",
    "./middleware/body-parser": "./src/middleware/body-parser/body-parser.ts",
    "./middleware/body-parser/json-parser": "./src/middleware/body-parser/json-parser.ts",
    "./utils/environment": "./src/utils/environment.ts",
    "./utils/file": "./src/utils/file.ts",
    "./utils/logger": "./src/utils/logger.ts",
    "./utils/mime-types": "./src/utils/mime-types.ts"
  },
  "publish": {
    "exclude": [".git", ".nova", ".github", "**/*.test.ts"]
  },
  "lock": false,
  "tasks": {
    "check": "deno check src/**/*.ts"
  }
}
